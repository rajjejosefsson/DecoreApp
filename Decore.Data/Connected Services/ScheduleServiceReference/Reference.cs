//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Decore.Data.ScheduleServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeEventInfo", Namespace="http://schemas.datacontract.org/2004/07/ScheduleService")]
    [System.SerializableAttribute()]
    public partial class EmployeeEventInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArrivingAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Decore.Data.ScheduleServiceReference.Event EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LeavingAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ArrivingAt {
            get {
                return this.ArrivingAtField;
            }
            set {
                if ((this.ArrivingAtField.Equals(value) != true)) {
                    this.ArrivingAtField = value;
                    this.RaisePropertyChanged("ArrivingAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Decore.Data.ScheduleServiceReference.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LeavingAt {
            get {
                return this.LeavingAtField;
            }
            set {
                if ((this.LeavingAtField.Equals(value) != true)) {
                    this.LeavingAtField = value;
                    this.RaisePropertyChanged("LeavingAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/Decore.Models")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> BasePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SaleStopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress {
            get {
                return this.AdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressField, value) != true)) {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> BasePrice {
            get {
                return this.BasePriceField;
            }
            set {
                if ((this.BasePriceField.Equals(value) != true)) {
                    this.BasePriceField = value;
                    this.RaisePropertyChanged("BasePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventOwner {
            get {
                return this.EventOwnerField;
            }
            set {
                if ((this.EventOwnerField.Equals(value) != true)) {
                    this.EventOwnerField = value;
                    this.RaisePropertyChanged("EventOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventTypeId {
            get {
                return this.EventTypeIdField;
            }
            set {
                if ((this.EventTypeIdField.Equals(value) != true)) {
                    this.EventTypeIdField = value;
                    this.RaisePropertyChanged("EventTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SaleStop {
            get {
                return this.SaleStopField;
            }
            set {
                if ((this.SaleStopField.Equals(value) != true)) {
                    this.SaleStopField = value;
                    this.RaisePropertyChanged("SaleStop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScheduleServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isRunning", ReplyAction="http://tempuri.org/IService1/isRunningResponse")]
        bool isRunning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isRunning", ReplyAction="http://tempuri.org/IService1/isRunningResponse")]
        System.Threading.Tasks.Task<bool> isRunningAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeSchedule", ReplyAction="http://tempuri.org/IService1/GetEmployeeScheduleResponse")]
        Decore.Data.ScheduleServiceReference.EmployeeEventInfo[] GetEmployeeSchedule(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeSchedule", ReplyAction="http://tempuri.org/IService1/GetEmployeeScheduleResponse")]
        System.Threading.Tasks.Task<Decore.Data.ScheduleServiceReference.EmployeeEventInfo[]> GetEmployeeScheduleAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AttendEmployeeToEvent", ReplyAction="http://tempuri.org/IService1/AttendEmployeeToEventResponse")]
        Decore.Data.ScheduleServiceReference.EmployeeEventInfo AttendEmployeeToEvent(int employeeId, int eventId, System.DateTime arrivingAt, System.DateTime leavingAt, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AttendEmployeeToEvent", ReplyAction="http://tempuri.org/IService1/AttendEmployeeToEventResponse")]
        System.Threading.Tasks.Task<Decore.Data.ScheduleServiceReference.EmployeeEventInfo> AttendEmployeeToEventAsync(int employeeId, int eventId, System.DateTime arrivingAt, System.DateTime leavingAt, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEvent", ReplyAction="http://tempuri.org/IService1/AddEventResponse")]
        string AddEvent(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEvent", ReplyAction="http://tempuri.org/IService1/AddEventResponse")]
        System.Threading.Tasks.Task<string> AddEventAsync(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveEvent", ReplyAction="http://tempuri.org/IService1/RemoveEventResponse")]
        string RemoveEvent(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveEvent", ReplyAction="http://tempuri.org/IService1/RemoveEventResponse")]
        System.Threading.Tasks.Task<string> RemoveEventAsync(int eventId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Decore.Data.ScheduleServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Decore.Data.ScheduleServiceReference.IService1>, Decore.Data.ScheduleServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isRunning() {
            return base.Channel.isRunning();
        }
        
        public System.Threading.Tasks.Task<bool> isRunningAsync() {
            return base.Channel.isRunningAsync();
        }
        
        public Decore.Data.ScheduleServiceReference.EmployeeEventInfo[] GetEmployeeSchedule(int employeeId) {
            return base.Channel.GetEmployeeSchedule(employeeId);
        }
        
        public System.Threading.Tasks.Task<Decore.Data.ScheduleServiceReference.EmployeeEventInfo[]> GetEmployeeScheduleAsync(int employeeId) {
            return base.Channel.GetEmployeeScheduleAsync(employeeId);
        }
        
        public Decore.Data.ScheduleServiceReference.EmployeeEventInfo AttendEmployeeToEvent(int employeeId, int eventId, System.DateTime arrivingAt, System.DateTime leavingAt, string comment) {
            return base.Channel.AttendEmployeeToEvent(employeeId, eventId, arrivingAt, leavingAt, comment);
        }
        
        public System.Threading.Tasks.Task<Decore.Data.ScheduleServiceReference.EmployeeEventInfo> AttendEmployeeToEventAsync(int employeeId, int eventId, System.DateTime arrivingAt, System.DateTime leavingAt, string comment) {
            return base.Channel.AttendEmployeeToEventAsync(employeeId, eventId, arrivingAt, leavingAt, comment);
        }
        
        public string AddEvent(int eventId) {
            return base.Channel.AddEvent(eventId);
        }
        
        public System.Threading.Tasks.Task<string> AddEventAsync(int eventId) {
            return base.Channel.AddEventAsync(eventId);
        }
        
        public string RemoveEvent(int eventId) {
            return base.Channel.RemoveEvent(eventId);
        }
        
        public System.Threading.Tasks.Task<string> RemoveEventAsync(int eventId) {
            return base.Channel.RemoveEventAsync(eventId);
        }
    }
}
