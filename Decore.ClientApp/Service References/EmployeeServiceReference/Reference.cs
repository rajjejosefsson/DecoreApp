//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Decore.ClientApp.EmployeeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessInfo", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
    [System.SerializableAttribute()]
    public partial class AccessInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdatedByIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedById {
            get {
                return this.CreatedByIdField;
            }
            set {
                if ((this.CreatedByIdField.Equals(value) != true)) {
                    this.CreatedByIdField = value;
                    this.RaisePropertyChanged("CreatedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdatedById {
            get {
                return this.UpdatedByIdField;
            }
            set {
                if ((this.UpdatedByIdField.Equals(value) != true)) {
                    this.UpdatedByIdField = value;
                    this.RaisePropertyChanged("UpdatedById");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeInfo", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
    [System.SerializableAttribute()]
    public partial class EmployeeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Decore.ClientApp.EmployeeServiceReference.RoleInfo[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdatedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedById {
            get {
                return this.CreatedByIdField;
            }
            set {
                if ((this.CreatedByIdField.Equals(value) != true)) {
                    this.CreatedByIdField = value;
                    this.RaisePropertyChanged("CreatedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Decore.ClientApp.EmployeeServiceReference.RoleInfo[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdatedById {
            get {
                return this.UpdatedByIdField;
            }
            set {
                if ((this.UpdatedByIdField.Equals(value) != true)) {
                    this.UpdatedByIdField = value;
                    this.RaisePropertyChanged("UpdatedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleInfo", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
    [System.SerializableAttribute()]
    public partial class RoleInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Decore.ClientApp.EmployeeServiceReference.AccessInfo[] AccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Decore.ClientApp.EmployeeServiceReference.EmployeeInfo[] EmployeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Decore.ClientApp.EmployeeServiceReference.SectionInfo SectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdatedByIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Decore.ClientApp.EmployeeServiceReference.AccessInfo[] Access {
            get {
                return this.AccessField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessField, value) != true)) {
                    this.AccessField = value;
                    this.RaisePropertyChanged("Access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedById {
            get {
                return this.CreatedByIdField;
            }
            set {
                if ((this.CreatedByIdField.Equals(value) != true)) {
                    this.CreatedByIdField = value;
                    this.RaisePropertyChanged("CreatedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Decore.ClientApp.EmployeeServiceReference.EmployeeInfo[] Employees {
            get {
                return this.EmployeesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeesField, value) != true)) {
                    this.EmployeesField = value;
                    this.RaisePropertyChanged("Employees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Decore.ClientApp.EmployeeServiceReference.SectionInfo Section {
            get {
                return this.SectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionField, value) != true)) {
                    this.SectionField = value;
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdatedById {
            get {
                return this.UpdatedByIdField;
            }
            set {
                if ((this.UpdatedByIdField.Equals(value) != true)) {
                    this.UpdatedByIdField = value;
                    this.RaisePropertyChanged("UpdatedById");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SectionInfo", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
    [System.SerializableAttribute()]
    public partial class SectionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Decore.ClientApp.EmployeeServiceReference.RoleInfo[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdatedByIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedById {
            get {
                return this.CreatedByIdField;
            }
            set {
                if ((this.CreatedByIdField.Equals(value) != true)) {
                    this.CreatedByIdField = value;
                    this.RaisePropertyChanged("CreatedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Decore.ClientApp.EmployeeServiceReference.RoleInfo[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdatedById {
            get {
                return this.UpdatedByIdField;
            }
            set {
                if ((this.UpdatedByIdField.Equals(value) != true)) {
                    this.UpdatedByIdField = value;
                    this.RaisePropertyChanged("UpdatedById");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.IEmployeeServiceWCF")]
    public interface IEmployeeServiceWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/IsRunning", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/IsRunningResponse")]
        bool IsRunning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/IsRunning", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/IsRunningResponse")]
        System.Threading.Tasks.Task<bool> IsRunningAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/CreateAccess", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/CreateAccessResponse")]
        Decore.ClientApp.EmployeeServiceReference.AccessInfo CreateAccess(int createdById, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/CreateAccess", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/CreateAccessResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.AccessInfo> CreateAccessAsync(int createdById, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/UpdateAccess", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/UpdateAccessResponse")]
        Decore.ClientApp.EmployeeServiceReference.AccessInfo UpdateAccess(int updatedById, Decore.ClientApp.EmployeeServiceReference.AccessInfo updatedAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/UpdateAccess", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/UpdateAccessResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.AccessInfo> UpdateAccessAsync(int updatedById, Decore.ClientApp.EmployeeServiceReference.AccessInfo updatedAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/DeleteAccess", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/DeleteAccessResponse")]
        string DeleteAccess(int acessId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/DeleteAccess", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/DeleteAccessResponse")]
        System.Threading.Tasks.Task<string> DeleteAccessAsync(int acessId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/CreateEmployeeResponse")]
        Decore.ClientApp.EmployeeServiceReference.EmployeeInfo CreateEmployee(int userIdIn, int createdByIdin, int[] sectionIds, int[] roleIdsIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> CreateEmployeeAsync(int userIdIn, int createdByIdin, int[] sectionIds, int[] roleIdsIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/GetEmployeeByUserId", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/GetEmployeeByUserIdResponse")]
        Decore.ClientApp.EmployeeServiceReference.EmployeeInfo GetEmployeeByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/GetEmployeeByUserId", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/GetEmployeeByUserIdResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> GetEmployeeByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/GetEmployeeById", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/GetEmployeeByIdResponse")]
        Decore.ClientApp.EmployeeServiceReference.EmployeeInfo GetEmployeeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/GetEmployeeById", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/GetEmployeeByIdResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> GetEmployeeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/ChangeEmployeeRoles", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/ChangeEmployeeRolesResponse")]
        Decore.ClientApp.EmployeeServiceReference.EmployeeInfo ChangeEmployeeRoles(int updatedById, int employeeId, int[] rolesToAddId, int[] rolesToRemoveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/ChangeEmployeeRoles", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/ChangeEmployeeRolesResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> ChangeEmployeeRolesAsync(int updatedById, int employeeId, int[] rolesToAddId, int[] rolesToRemoveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/ChangeEmployeeSections", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/ChangeEmployeeSectionsResponse")]
        Decore.ClientApp.EmployeeServiceReference.EmployeeInfo ChangeEmployeeSections(int updatedById, int employeeId, int[] sectionsToAddIds, int[] sectionsToRemoveIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/ChangeEmployeeSections", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/ChangeEmployeeSectionsResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> ChangeEmployeeSectionsAsync(int updatedById, int employeeId, int[] sectionsToAddIds, int[] sectionsToRemoveIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/DeleteEmployeeResponse")]
        string DeleteEmployee(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/CreateRole", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/CreateRoleResponse")]
        Decore.ClientApp.EmployeeServiceReference.RoleInfo CreateRole(int createdById, int sectionId, string name, string description, int[] access);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/CreateRole", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/CreateRoleResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.RoleInfo> CreateRoleAsync(int createdById, int sectionId, string name, string description, int[] access);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/UpdateRole", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/UpdateRoleResponse")]
        Decore.ClientApp.EmployeeServiceReference.RoleInfo UpdateRole(int updatedById, Decore.ClientApp.EmployeeServiceReference.RoleInfo updatedRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/UpdateRole", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/UpdateRoleResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.RoleInfo> UpdateRoleAsync(int updatedById, Decore.ClientApp.EmployeeServiceReference.RoleInfo updatedRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/DeleteRole", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/DeleteRoleResponse")]
        string DeleteRole(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/DeleteRole", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/DeleteRoleResponse")]
        System.Threading.Tasks.Task<string> DeleteRoleAsync(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/CreateSection", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/CreateSectionResponse")]
        Decore.ClientApp.EmployeeServiceReference.SectionInfo CreateSection(int createdById, string name, string description, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/CreateSection", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/CreateSectionResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.SectionInfo> CreateSectionAsync(int createdById, string name, string description, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/GetSectionById", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/GetSectionByIdResponse")]
        Decore.ClientApp.EmployeeServiceReference.SectionInfo GetSectionById(int sectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/GetSectionById", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/GetSectionByIdResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.SectionInfo> GetSectionByIdAsync(int sectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/GetAllSections", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/GetAllSectionsResponse")]
        Decore.ClientApp.EmployeeServiceReference.SectionInfo[] GetAllSections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/GetAllSections", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/GetAllSectionsResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.SectionInfo[]> GetAllSectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/UpdateSection", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/UpdateSectionResponse")]
        Decore.ClientApp.EmployeeServiceReference.SectionInfo UpdateSection(int updatedById, Decore.ClientApp.EmployeeServiceReference.SectionInfo updatedSection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/UpdateSection", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/UpdateSectionResponse")]
        System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.SectionInfo> UpdateSectionAsync(int updatedById, Decore.ClientApp.EmployeeServiceReference.SectionInfo updatedSection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/DeleteSection", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/DeleteSectionResponse")]
        string DeleteSection(int sectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServiceWCF/DeleteSection", ReplyAction="http://tempuri.org/IEmployeeServiceWCF/DeleteSectionResponse")]
        System.Threading.Tasks.Task<string> DeleteSectionAsync(int sectionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceWCFChannel : Decore.ClientApp.EmployeeServiceReference.IEmployeeServiceWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceWCFClient : System.ServiceModel.ClientBase<Decore.ClientApp.EmployeeServiceReference.IEmployeeServiceWCF>, Decore.ClientApp.EmployeeServiceReference.IEmployeeServiceWCF {
        
        public EmployeeServiceWCFClient() {
        }
        
        public EmployeeServiceWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsRunning() {
            return base.Channel.IsRunning();
        }
        
        public System.Threading.Tasks.Task<bool> IsRunningAsync() {
            return base.Channel.IsRunningAsync();
        }
        
        public Decore.ClientApp.EmployeeServiceReference.AccessInfo CreateAccess(int createdById, string name, string description) {
            return base.Channel.CreateAccess(createdById, name, description);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.AccessInfo> CreateAccessAsync(int createdById, string name, string description) {
            return base.Channel.CreateAccessAsync(createdById, name, description);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.AccessInfo UpdateAccess(int updatedById, Decore.ClientApp.EmployeeServiceReference.AccessInfo updatedAccess) {
            return base.Channel.UpdateAccess(updatedById, updatedAccess);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.AccessInfo> UpdateAccessAsync(int updatedById, Decore.ClientApp.EmployeeServiceReference.AccessInfo updatedAccess) {
            return base.Channel.UpdateAccessAsync(updatedById, updatedAccess);
        }
        
        public string DeleteAccess(int acessId) {
            return base.Channel.DeleteAccess(acessId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAccessAsync(int acessId) {
            return base.Channel.DeleteAccessAsync(acessId);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.EmployeeInfo CreateEmployee(int userIdIn, int createdByIdin, int[] sectionIds, int[] roleIdsIn) {
            return base.Channel.CreateEmployee(userIdIn, createdByIdin, sectionIds, roleIdsIn);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> CreateEmployeeAsync(int userIdIn, int createdByIdin, int[] sectionIds, int[] roleIdsIn) {
            return base.Channel.CreateEmployeeAsync(userIdIn, createdByIdin, sectionIds, roleIdsIn);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.EmployeeInfo GetEmployeeByUserId(int userId) {
            return base.Channel.GetEmployeeByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> GetEmployeeByUserIdAsync(int userId) {
            return base.Channel.GetEmployeeByUserIdAsync(userId);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.EmployeeInfo GetEmployeeById(int id) {
            return base.Channel.GetEmployeeById(id);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> GetEmployeeByIdAsync(int id) {
            return base.Channel.GetEmployeeByIdAsync(id);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.EmployeeInfo ChangeEmployeeRoles(int updatedById, int employeeId, int[] rolesToAddId, int[] rolesToRemoveId) {
            return base.Channel.ChangeEmployeeRoles(updatedById, employeeId, rolesToAddId, rolesToRemoveId);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> ChangeEmployeeRolesAsync(int updatedById, int employeeId, int[] rolesToAddId, int[] rolesToRemoveId) {
            return base.Channel.ChangeEmployeeRolesAsync(updatedById, employeeId, rolesToAddId, rolesToRemoveId);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.EmployeeInfo ChangeEmployeeSections(int updatedById, int employeeId, int[] sectionsToAddIds, int[] sectionsToRemoveIds) {
            return base.Channel.ChangeEmployeeSections(updatedById, employeeId, sectionsToAddIds, sectionsToRemoveIds);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.EmployeeInfo> ChangeEmployeeSectionsAsync(int updatedById, int employeeId, int[] sectionsToAddIds, int[] sectionsToRemoveIds) {
            return base.Channel.ChangeEmployeeSectionsAsync(updatedById, employeeId, sectionsToAddIds, sectionsToRemoveIds);
        }
        
        public string DeleteEmployee(int employeeId) {
            return base.Channel.DeleteEmployee(employeeId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int employeeId) {
            return base.Channel.DeleteEmployeeAsync(employeeId);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.RoleInfo CreateRole(int createdById, int sectionId, string name, string description, int[] access) {
            return base.Channel.CreateRole(createdById, sectionId, name, description, access);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.RoleInfo> CreateRoleAsync(int createdById, int sectionId, string name, string description, int[] access) {
            return base.Channel.CreateRoleAsync(createdById, sectionId, name, description, access);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.RoleInfo UpdateRole(int updatedById, Decore.ClientApp.EmployeeServiceReference.RoleInfo updatedRole) {
            return base.Channel.UpdateRole(updatedById, updatedRole);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.RoleInfo> UpdateRoleAsync(int updatedById, Decore.ClientApp.EmployeeServiceReference.RoleInfo updatedRole) {
            return base.Channel.UpdateRoleAsync(updatedById, updatedRole);
        }
        
        public string DeleteRole(int roleId) {
            return base.Channel.DeleteRole(roleId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRoleAsync(int roleId) {
            return base.Channel.DeleteRoleAsync(roleId);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.SectionInfo CreateSection(int createdById, string name, string description, string email) {
            return base.Channel.CreateSection(createdById, name, description, email);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.SectionInfo> CreateSectionAsync(int createdById, string name, string description, string email) {
            return base.Channel.CreateSectionAsync(createdById, name, description, email);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.SectionInfo GetSectionById(int sectionId) {
            return base.Channel.GetSectionById(sectionId);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.SectionInfo> GetSectionByIdAsync(int sectionId) {
            return base.Channel.GetSectionByIdAsync(sectionId);
        }
        
        public Decore.ClientApp.EmployeeServiceReference.SectionInfo[] GetAllSections() {
            return base.Channel.GetAllSections();
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.SectionInfo[]> GetAllSectionsAsync() {
            return base.Channel.GetAllSectionsAsync();
        }
        
        public Decore.ClientApp.EmployeeServiceReference.SectionInfo UpdateSection(int updatedById, Decore.ClientApp.EmployeeServiceReference.SectionInfo updatedSection) {
            return base.Channel.UpdateSection(updatedById, updatedSection);
        }
        
        public System.Threading.Tasks.Task<Decore.ClientApp.EmployeeServiceReference.SectionInfo> UpdateSectionAsync(int updatedById, Decore.ClientApp.EmployeeServiceReference.SectionInfo updatedSection) {
            return base.Channel.UpdateSectionAsync(updatedById, updatedSection);
        }
        
        public string DeleteSection(int sectionId) {
            return base.Channel.DeleteSection(sectionId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSectionAsync(int sectionId) {
            return base.Channel.DeleteSectionAsync(sectionId);
        }
    }
}
