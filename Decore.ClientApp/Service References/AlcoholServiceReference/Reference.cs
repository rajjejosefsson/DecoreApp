//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Decore.ClientApp.AlcoholServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AlcoholServiceReference.IAlcoholService")]
    public interface IAlcoholService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/GetBeverage", ReplyAction="http://tempuri.org/IAlcoholService/GetBeverageResponse")]
        Decore.Models.Beverage[] GetBeverage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/GetBeverage", ReplyAction="http://tempuri.org/IAlcoholService/GetBeverageResponse")]
        System.Threading.Tasks.Task<Decore.Models.Beverage[]> GetBeverageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/GetBeverageById", ReplyAction="http://tempuri.org/IAlcoholService/GetBeverageByIdResponse")]
        Decore.Models.Beverage GetBeverageById(int beverageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/GetBeverageById", ReplyAction="http://tempuri.org/IAlcoholService/GetBeverageByIdResponse")]
        System.Threading.Tasks.Task<Decore.Models.Beverage> GetBeverageByIdAsync(int beverageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/CreateBeverage", ReplyAction="http://tempuri.org/IAlcoholService/CreateBeverageResponse")]
        void CreateBeverage(Decore.Models.Beverage beverageObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/CreateBeverage", ReplyAction="http://tempuri.org/IAlcoholService/CreateBeverageResponse")]
        System.Threading.Tasks.Task CreateBeverageAsync(Decore.Models.Beverage beverageObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/DeleteBeverageById", ReplyAction="http://tempuri.org/IAlcoholService/DeleteBeverageByIdResponse")]
        void DeleteBeverageById(int beverageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/DeleteBeverageById", ReplyAction="http://tempuri.org/IAlcoholService/DeleteBeverageByIdResponse")]
        System.Threading.Tasks.Task DeleteBeverageByIdAsync(int beverageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/GetBeverageCountUps", ReplyAction="http://tempuri.org/IAlcoholService/GetBeverageCountUpsResponse")]
        Decore.Models.CountBeverage[] GetBeverageCountUps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/GetBeverageCountUps", ReplyAction="http://tempuri.org/IAlcoholService/GetBeverageCountUpsResponse")]
        System.Threading.Tasks.Task<Decore.Models.CountBeverage[]> GetBeverageCountUpsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/GetBeverageCountUpsByDateTime", ReplyAction="http://tempuri.org/IAlcoholService/GetBeverageCountUpsByDateTimeResponse")]
        Decore.Models.CountBeverage[] GetBeverageCountUpsByDateTime(System.DateTime countTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/GetBeverageCountUpsByDateTime", ReplyAction="http://tempuri.org/IAlcoholService/GetBeverageCountUpsByDateTimeResponse")]
        System.Threading.Tasks.Task<Decore.Models.CountBeverage[]> GetBeverageCountUpsByDateTimeAsync(System.DateTime countTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/PostBeverageCountUp", ReplyAction="http://tempuri.org/IAlcoholService/PostBeverageCountUpResponse")]
        void PostBeverageCountUp(Decore.Models.CountBeverage countBeverageItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlcoholService/PostBeverageCountUp", ReplyAction="http://tempuri.org/IAlcoholService/PostBeverageCountUpResponse")]
        System.Threading.Tasks.Task PostBeverageCountUpAsync(Decore.Models.CountBeverage countBeverageItem);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlcoholServiceChannel : Decore.ClientApp.AlcoholServiceReference.IAlcoholService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlcoholServiceClient : System.ServiceModel.ClientBase<Decore.ClientApp.AlcoholServiceReference.IAlcoholService>, Decore.ClientApp.AlcoholServiceReference.IAlcoholService {
        
        public AlcoholServiceClient() {
        }
        
        public AlcoholServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlcoholServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlcoholServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlcoholServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Decore.Models.Beverage[] GetBeverage() {
            return base.Channel.GetBeverage();
        }
        
        public System.Threading.Tasks.Task<Decore.Models.Beverage[]> GetBeverageAsync() {
            return base.Channel.GetBeverageAsync();
        }
        
        public Decore.Models.Beverage GetBeverageById(int beverageId) {
            return base.Channel.GetBeverageById(beverageId);
        }
        
        public System.Threading.Tasks.Task<Decore.Models.Beverage> GetBeverageByIdAsync(int beverageId) {
            return base.Channel.GetBeverageByIdAsync(beverageId);
        }
        
        public void CreateBeverage(Decore.Models.Beverage beverageObject) {
            base.Channel.CreateBeverage(beverageObject);
        }
        
        public System.Threading.Tasks.Task CreateBeverageAsync(Decore.Models.Beverage beverageObject) {
            return base.Channel.CreateBeverageAsync(beverageObject);
        }
        
        public void DeleteBeverageById(int beverageId) {
            base.Channel.DeleteBeverageById(beverageId);
        }
        
        public System.Threading.Tasks.Task DeleteBeverageByIdAsync(int beverageId) {
            return base.Channel.DeleteBeverageByIdAsync(beverageId);
        }
        
        public Decore.Models.CountBeverage[] GetBeverageCountUps() {
            return base.Channel.GetBeverageCountUps();
        }
        
        public System.Threading.Tasks.Task<Decore.Models.CountBeverage[]> GetBeverageCountUpsAsync() {
            return base.Channel.GetBeverageCountUpsAsync();
        }
        
        public Decore.Models.CountBeverage[] GetBeverageCountUpsByDateTime(System.DateTime countTime) {
            return base.Channel.GetBeverageCountUpsByDateTime(countTime);
        }
        
        public System.Threading.Tasks.Task<Decore.Models.CountBeverage[]> GetBeverageCountUpsByDateTimeAsync(System.DateTime countTime) {
            return base.Channel.GetBeverageCountUpsByDateTimeAsync(countTime);
        }
        
        public void PostBeverageCountUp(Decore.Models.CountBeverage countBeverageItem) {
            base.Channel.PostBeverageCountUp(countBeverageItem);
        }
        
        public System.Threading.Tasks.Task PostBeverageCountUpAsync(Decore.Models.CountBeverage countBeverageItem) {
            return base.Channel.PostBeverageCountUpAsync(countBeverageItem);
        }
    }
}
